MDL
Heritage 
 -Singletable:Toutes les classes qui participent à l'heritage seront dans une seule table
  personne(id,nom_complet,role,login,password,grade,matricule,adresse,sexe)
 -Joined :Creer autant de table que de classes mais la clé de la classes Mére migre comme cle etrangé au niveau de la classe fille
 //il exite une trois methode (on ferait des recherche là dessus)
personne(id,nom_complet,role)
User(login,password,#personne_id)
Professeur(grade,#personne_id)
Rp(#personne_id)
AC(#personne_id)
Etudiant(matricule,sexe,adresse,#personne_id)

OneToMany->ManyToOne
1->*    //OneToMany
*->1    //ManyToOne

MLD =>c'est le clé du faible qui va migrer dans le fort
annee_scolaire(id,libelle)
inscription(#annee_id,ac_ic,etudiant_id,classe_id,annee_id)

ManyToMany -> ManyToMany
classe(id,libelle,filiere,niveau)
professeur_classe(#classe_id,#personne_id)

//les types de requete
//Requetes Mis à jour => change l'état de la table
insert()
delete()
update()

//retourne des donnees  => Objets ou tableau
select()

//Explication

//creer un objet ou instanciation
// $pers1=new Personne();
//appel de la methode nommee le constructeur
//donne un etat a un objet
//->:operation de portee d'Instance
// $pers1->setId(1);
// $pers1->setNomComplet('Moustapha FAYE');

// $pers2->setId(1)
//       ->setNomComplet('Moustapha FAYE');


// echo $pers1->getId();
// echo $pers1->setNomComplet();  
//appel d'une metoded static
// Personne::setNbrePersonne(12);
// echo Personne::getNbrePersonne;